BEGINdeclare now int;declare delta_sec int default 0;declare score int default 0;set @bike_user_id = 0;set @bike_last_start_time = 0;set @bike_stop_time = 0;set @bike_pre_user_id = 0;set @bike_last_user_id = 0;set @bike_last_phone=0;set @bike_last_score_log_id = 0;UPDATE bike_info SET pwdCurrent = LEFT(pwdBacklog, 4), pwdBacklog = SUBSTRING(pwdBacklog, 5) where bikeId = bike_id 	and useBikeSetVar(userId, startTime, stopTime, preUseUserId, lastUseUserId, lastUseScoreLogId);if FOUND_ROWS() = 0 then	set err_code = 1;elseif @bike_pre_user_id = 0 then	set err_code = 2;else	set now = UNIX_TIMESTAMP();	if @bike_user_id > 0 then		CALL bikeReturnByBikeId(bike_id, err_code, err_code);		set @bike_last_user_id = @bike_user_id;		set @bike_stop_time = now;	end if;	if ISNULL(@bike_last_user_id) or @bike_pre_user_id != @bike_last_user_id then		if @bike_last_start_time > 0 and @bike_last_user_id > 0 then			set delta_sec = (now - @bike_stop_time) / 120;						if delta_sec < 20 then				set score = 20 - delta_sec;								SET @sql_stmt = CONCAT("UPDATE user_score_", DATE_FORMAT(FROM_UNIXTIME(@bike_last_start_time), '%Y_%m'), 					" SET scoreTurnover = ", score, " WHERE logId = ", @bike_last_score_log_id, ";");				set score = 30 + score;			else				set score = 30;								SET @sql_stmt = CONCAT("DELETE FROM user_score_", DATE_FORMAT(FROM_UNIXTIME(@bike_last_start_time), '%Y_%m'), 					" WHERE logId = ", @bike_last_score_log_id, ";");			end if;			call callStmt();				UPDATE user_info SET userScore = userScore + score WHERE userId = @bike_last_user_id;		end if;		set delta_sec = 888;	end if;	set @last_use_bike_time = 0;	START TRANSACTION;	UPDATE user_info SET userScore = userScore - IF(useBikeTime = 0, IF(delta_sec > 0, 30, 0), 0), useBikeId = IF(useBikeTime = 0, bike_id, useBikeId), useBikeTime = IF(useBikeTime = 0, now, useBikeTime) WHERE userId = @bike_pre_user_id and (@last_use_bike_time := useBikeTime) >= 0;	if ROW_COUNT() = 0 then		set err_code = 3;	elseif @last_use_bike_time > 0 then		set err_code = 4;	else		if delta_sec > 0 then						SET @sql_stmt = CONCAT("INSERT INTO user_score_", DATE_FORMAT(FROM_UNIXTIME(now), '%Y_%m'), " SET userId = ", @bike_pre_user_id, 				", bikeId = ", bike_id, ", tradeTime = ", now, ", scoreTurnover = -30;");			call callStmt();			UPDATE bike_info SET bikeAlert = 0, startTime = now, stopTime = 0, userId = preUseUserId, preUseUserId = 0, lastUseUserId = @bike_pre_user_id, lastUseScoreLogId = LAST_INSERT_ID() where bikeId = bike_id;		else			UPDATE bike_info SET bikeAlert = 0, startTime = now, stopTime = 0, userId = preUseUserId, preUseUserId = 0 where bikeId = bike_id;		end if;		set err_code = 0;	end if;	COMMIT;end if;END