BEGINdeclare now int;declare delta_sec int default 0;declare score int default 0;declare lastTime int default 0;declare thisTime int default 0;declare delta_sec2 int default 0;set @bike_user_id = 0;set @bike_last_start_time = 0;set @bike_stop_time = 0;set @bike_pre_user_id = 0;set @bike_last_user_id = 0;set @bike_last_phone=0;set @bike_last_score_log_id = 0;UPDATE bike_info SET pwdCurrent = LEFT(pwdBacklog, 4), pwdBacklog = SUBSTRING(pwdBacklog, 5) where bikeId = bike_id 	and useBikeSetVar(userId, startTime, stopTime, preUseUserId, lastUseUserId, lastUseScoreLogId);if FOUND_ROWS() = 0 then	set err_code = 1;elseif @bike_pre_user_id = 0 then	set err_code = 2;else	set now = UNIX_TIMESTAMP();	if @bike_user_id > 0 then		CALL bikeReturnByBikeId(bike_id, err_code, err_code);		set @bike_last_user_id = @bike_user_id;		set @bike_stop_time = now;	end if;	if ISNULL(@bike_last_user_id) or @bike_pre_user_id != @bike_last_user_id then		if @bike_last_start_time > 0 and @bike_last_user_id > 0 then			set delta_sec = (now - @bike_stop_time) / 3600;			set delta_sec = (now - @bike_stop_time) / 120;			set lastTime = FROM_UNIXTIME(@bike_stop_time,'%H%i');			set thisTime = FROM_UNIXTIME(now,'%H%i');			if delta_sec<24 then				if lastTime>'0700' and lastTime<'1900' and thisTime>'0700' and thisTime<'1900' then					if delta_sec < 1 and delta_sec2>0 then						set score = 30;					elseif delta_sec<2 then						set score=20;					elseif delta_sec<3 then						set score=10;							elseif delta_sec>4 and delta_sec<5 then						set score=-10;					elseif delta_sec>=5 and delta_sec<6 then 						set score=-20;					elseif delta_sec>=6 then						set score=-30;					end if;				elseif lastTime>'0700' and lastTime<'1900' and thisTime<'0700' or thisTime>'1900' then					if delta_sec>16 and delta_sec<17 then 						set score=-10;					elseif delta_sec>=17 and delta_sec<18 then 						set score=-20;					elseif delta_sec>=18 then						set score=-30;					end if;				elseif lastTime<'0700' or lastTime>'1900' and thisTime>'0700' or thisTime<'1900' then					if delta_sec>16 and delta_sec<17 then 						set score=-10;					elseif delta_sec>=17 and delta_sec<18 then 						set score=-20;					elseif delta_sec>=18 then						set score=-30;					end if;				end if;			elseif delta_sec>=24 then					set score=-30;			end if;			SET @sql_stmt = CONCAT("INSERT INTO user_score_", DATE_FORMAT(FROM_UNIXTIME(now), '%Y_%m'), " SET userId = ", @bike_last_user_id, 				", bikeId = ", bike_id, ", tradeTime = ", now, ", scoreTurnover =",score);			call callStmt();			set user_score=score;			select userPhone,smsScore into user_phone,sms_score from user_info where userId=@bike_last_user_id;						UPDATE user_info SET userScore = userScore + score WHERE userId = @bike_last_user_id;		end if;		set delta_sec = 888;	end if; 	set @last_use_bike_time = 0;	START TRANSACTION;	UPDATE user_info SET useBikeId = IF(useBikeTime = 0, bike_id, useBikeId), useBikeTime = IF(useBikeTime = 0, now, useBikeTime) WHERE userId = @bike_pre_user_id and (@last_use_bike_time := useBikeTime) >= 0;	if ROW_COUNT() = 0 then		set err_code = 3;	elseif @last_use_bike_time > 0 then		set err_code = 4;	else		if delta_sec > 0 then						UPDATE bike_info SET bikeAlert = 0, startTime = now, stopTime = 0, userId = preUseUserId, preUseUserId = 0, lastUseUserId = @bike_pre_user_id, lastUseScoreLogId = LAST_INSERT_ID() where bikeId = bike_id;		else			UPDATE bike_info SET bikeAlert = 0, startTime = now, stopTime = 0, userId = preUseUserId, preUseUserId = 0 where bikeId = bike_id;		end if;		set err_code = 0;	end if;	COMMIT;end if;END